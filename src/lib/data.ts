export const defaultRoadmap = [
  { id: 1, text: "# Phase 1: Fundamentals (Month 1 – 1.5)", completed: false },
  { id: 2, text: "Arrays & Strings", completed: false },
  { id: 3, text: "Basic Maths (GCD, LCM, Prime, Power, etc.)", completed: false },
  { id: 4, text: "Sorting (Bubble, Selection, Insertion, Merge, Quick)", completed: false },
  { id: 5, text: "Binary Search & Applications", completed: false },
  { id: 6, text: "Two Pointers / Sliding Window", completed: false },
  { id: 7, text: "Practice: 60–80 problems (LeetCode Easy–Medium)", completed: false },
  { id: 8, text: "# Phase 2: Core Data Structures (Month 2 – 3)", completed: false },
  { id: 9, text: "Hashing (Maps, Sets)", completed: false },
  { id: 10, text: "Stack & Queue (Next Greater, Balanced Parens, Monotonic Stack)", completed: false },
  { id: 11, text: "Linked List (Singly, Doubly, Reverse, Cycle Detection)", completed: false },
  { id: 12, text: "Recursion + Backtracking (Subset, Permutation, N-Queens)", completed: false },
  { id: 13, text: "Practice: 100+ problems (focus on LeetCode Medium)", completed: false },
  { id: 14, text: "# Phase 3: Trees & Heaps (Month 4)", completed: false },
  { id: 15, text: "Binary Trees (Traversal, Height, LCA, Mirror)", completed: false },
  { id: 16, text: "Binary Search Trees (Insert, Delete, Floor, Ceil)", completed: false },
  { id: 17, text: "Heaps & Priority Queue", completed: false },
  { id: 18, text: "Tries (Autocomplete)", completed: false },
  { id: 19, text: "Practice: 40–50 problems", completed: false },
  { id: 20, text: "# Phase 4: Graphs + Advanced Concepts (Month 5–6)", completed: false },
  { id: 21, text: "Graph Representations (BFS, DFS)", completed: false },
  { id: 22, text: "Cycle Detection, Topological Sort", completed: false },
  { id: 23, text: "Shortest Path (Dijkstra, Bellman-Ford, Floyd-Warshall)", completed: false },
  { id: 24, text: "Union-Find / DSU", completed: false },
  { id: 25, text: "Bit Manipulation (XOR tricks, Bitmask DP)", completed:
false },
  { id: 26, text: "Practice: 60+ graph problems, 20+ bit manipulation", completed: false },
  { id: 27, text: "# Phase 5: DP + Practice + Patterns (Month 7–8)", completed: false },
  { id: 28, text: "1D DP: Fibonacci, Climb Stairs, Min Cost", completed: false },
  { id: 29, text: "2D DP: Grid, Knapsack, Subset Sum", completed: false },
  { id: 30, text: "String DP: LCS, Edit Distance, Palindromes", completed: false },
  { id: 31, text: "DP on Trees, DP on Bitmask (optional)", completed: false },
  { id: 32, text: "Practice: Solve 30–40 DP problems (LC & GFG)", completed: false },
  { id: 33, text: "# Phase 6: Final Prep + Mocks (Month 9)", completed: false },
  { id: 34, text: "Solve 10–15 Company-specific sets", completed: false },
  { id: 35, text: "Mock interviews (Pramp / InterviewBuddy)", completed: false },
  { id: 36, text: "Revise 50 key problems (Arrays, Recursion, Graph, DP)", completed: false },
  { id: 37, text: "Participate in Contests (LeetCode Weekly, Codeforces)", completed: false },
];

export const syllabus = [
  "Data Structures and Algorithms",
  "Object-Oriented Programming",
  "Database Management Systems",
  "Operating Systems",
  "Computer Networks",
  "System Design",
  "Aptitude & Reasoning",
];

export const topics = [
  { value: "arrays", label: "Arrays" },
  { value: "strings", label: "Strings" },
  { value: "linked_lists", label: "Linked Lists" },
  { value: "stacks_queues", label: "Stacks & Queues" },
  { value: "trees", label: "Trees" },
  { value: "graphs", label: "Graphs" },
  { value: "sorting_searching", label: "Sorting & Searching" },
  { value: "dynamic_programming", label: "Dynamic Programming" },
  { value: "oop_concepts", label: "OOP Concepts" },
  { value: "sql", label: "SQL" },
  { value: "deadlocks", label: "Deadlocks" },
  { value: "tcp_ip", label: "TCP/IP" },
  { value: "scalability", label: "Scalability" },
];

export const questions: any[] = [];
export const exams: any[] = [];
