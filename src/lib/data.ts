
export const defaultRoadmap = [
    { id: 1, text: "# ðŸ“… Month 1: Foundations of DSA & DBMS", completed: false },
    { id: 2, text: "Complexity Analysis: Time, Space, Big-O", completed: false },
    { id: 3, text: "Arrays: Traversals, Rotations, Kadaneâ€™s Algo, Prefix Sum", completed: false },
    { id: 4, text: "Hashing: Frequency Maps, Count, Sets", completed: false },
    { id: 5, text: "Two Pointers & Sliding Window: Max Sum Subarray, Smallest Window", completed: false },
    { id: 6, text: "Binary Search (Intro): Standard BS, First/Last Occurrence", completed: false },
    { id: 7, text: "DBMS: ER Diagrams, Relational Model", completed: false },
    { id: 8, text: "DBMS: Types of Keys (Primary, Foreign, Candidate)", completed: false },
    { id: 9, text: "DBMS: Functional Dependencies", completed: false },
    { id: 10, text: "DBMS: Normalization (1NFâ€“3NF)", completed: false },
    { id: 11, text: "Dev: HTML, CSS, JS Fundamentals", completed: false },
    { id: 12, text: "Dev: Git & GitHub Basics", completed: false },
    { id: 13, text: "Dev: Make a simple portfolio page", completed: false },

    { id: 14, text: "# ðŸ“… Month 2: Recursion, Linked Lists, SQL", completed: false },
    { id: 15, text: "Recursion: Backtracking (N-Queens, Subsets)", completed: false },
    { id: 16, text: "Linked Lists: Insert, Delete, Reverse, Cycle Detection", completed: false },
    { id: 17, text: "Stack + Queue (Intro): Implementations, Min Stack", completed: false },
    { id: 18, text: "SQL Basics: DDL, DML, DQL", completed: false },
    { id: 19, text: "SQL: Aggregate Functions, Subqueries", completed: false },
    { id: 20, text: "SQL: JOINS: Inner, Left, Right, Full", completed: false },
    { id: 21, text: "SQL: Transactions & ACID Properties", completed: false },
    { id: 22, text: "Dev: DOM Manipulation (JS)", completed: false },
    { id: 23, text: "Dev: Build: To-Do App or Notes App", completed: false },

    { id: 24, text: "# ðŸ“… Month 3: Stack, Queue, OS Introduction", completed: false },
    { id: 25, text: "Stacks: Balanced Parens, Infix â†’ Postfix", completed: false },
    { id: 26, text: "Queues: Circular Queue, Deque", completed: false },
    { id: 27, text: "Sliding Window: Max/Min Window, Longest Substring", completed: false },
    { id: 28, text: "Binary Search: BS on Answer, Rotated Sorted Array", completed: false },
    { id: 29, text: "OS: Process vs Thread", completed: false },
    { id: 30, text: "OS: Process Scheduling: FCFS, SJF, RR, Priority", completed: false },
    { id: 31, text: "OS: Deadlock: Detection, Prevention, Bankerâ€™s Algo", completed: false },
    { id: 32, text: "Dev: JavaScript Events, Forms, Fetch API", completed: false },
    { id: 33, text: "Dev: Mini project with API (Weather App, Quotes App)", completed: false },
    
    { id: 34, text: "# ðŸ“… Month 4: Trees + CN Basics", completed: false },
    { id: 35, text: "Binary Trees: Inorder, Preorder, Postorder", completed: false },
    { id: 36, text: "Tree Problems: Diameter, Height, Mirror, Top View", completed: false },
    { id: 37, text: "BST: Insert, Delete, Floor/Ceil, Validate", completed: false },
    { id: 38, text: "LCA, Kth Ancestor, Vertical Order", completed: false },
    { id: 39, text: "CN: Network Layers (OSI, TCP/IP)", completed: false },
    { id: 40, text: "CN: IP Addressing, DNS, HTTP/HTTPS", completed: false },
    { id: 41, text: "CN: TCP vs UDP, MAC, ARP", completed: false },
    { id: 42, text: "Dev: Responsive Design (Media Queries)", completed: false },
    { id: 43, text: "Dev: GitHub Projects and hosted site (Netlify/Vercel)", completed: false },

    { id: 44, text: "# ðŸ“… Month 5: Graphs + OS/DBMS Revision", completed: false },
    { id: 45, text: "Graph Representation: Matrix/List", completed: false },
    { id: 46, text: "Graph Traversals: DFS, BFS", completed: false },
    { id: 47, text: "Cycle Detection: Directed & Undirected Graphs", completed: false },
    { id: 48, text: "Topological Sort: DFS + Kahnâ€™s Algo", completed: false },
    { id: 49, text: "Shortest Paths: Dijkstra, Bellman-Ford, Floyd-Warshall", completed: false },
    { id: 50, text: "OS/DBMS Revision: Paging, Segmentation, Virtual Memory", completed: false },
    { id: 51, text: "OS/DBMS Revision: Indexing, Views, Stored Procedures", completed: false },
    { id: 52, text: "Dev: CSS Flex/Grid Mastery", completed: false },
    { id: 53, text: "Dev: Build: Blog UI, Simple Resume Page", completed: false },
    
    { id: 54, text: "# ðŸ“… Month 6: Heaps, Tries, OOP Concepts", completed: false },
    { id: 55, text: "Heap: Min/Max Heap, Heapify, Top K Problems", completed: false },
    { id: 56, text: "Priority Queue, Heap Sort", completed: false },
    { id: 57, text: "Trie: Insert, Search, Word Suggestions", completed: false },
    { id: 58, text: "Practice: LRU Cache, Median in Stream", completed: false },
    { id: 59, text: "OOP: Class, Object, Constructor, Inheritance, Polymorphism", completed: false },
    { id: 60, text: "OOP: Encapsulation, Abstraction", completed: false },
    { id: 61, text: "OOP: SOLID Principles", completed: false },
    { id: 62, text: "Dev: JavaScript Modules + ES6", completed: false },
    { id: 63, text: "Dev: Build: Mini shopping cart (vanilla JS or React)", completed: false },

    { id: 64, text: "# ðŸ“… Month 7: Dynamic Programming + CN Deep Dive", completed: false },
    { id: 65, text: "Introduction to DP: Memoization & Tabulation", completed: false },
    { id: 66, text: "1D DP: Fibonacci, Climbing Stairs", completed: false },
    { id: 67, text: "2D DP: LCS, Edit Distance, Subset Sum, Knapsack", completed: false },
    { id: 68, text: "DP on Trees/Graphs: DP with States", completed: false },
    { id: 69, text: "CN: TCP 3-way Handshake, Congestion Control", completed: false },
    { id: 70, text: "CN: SSL, Firewalls, Proxy, NAT, Cookies vs Sessions", completed: false },
    { id: 71, text: "Dev: Learn React Basics (JSX, Props, State)", completed: false },
    { id: 72, text: "Dev: Build: Expense Tracker or Form App", completed: false },

    { id: 73, text: "# ðŸ“… Month 8: Mock Interviews + System Design", completed: false },
    { id: 74, text: "Practice Company-Wise Sets: Amazon, Microsoft, Flipkart", completed: false },
    { id: 75, text: "Solve: 200+ Quality Problems", completed: false },
    { id: 76, text: "Leetcode Contests / Timed Sets", completed: false },
    { id: 77, text: "System Design Intro: Load Balancers, Caching, Sharding", completed: false },
    { id: 78, text: "System Design: URL Shortener, Rate Limiter", completed: false },
    { id: 79, text: "Dev: Build Fullstack App (Node.js + MongoDB or Firebase)", completed: false },
    { id: 80, text: "Dev: Integrate Auth, CRUD, and Deployment", completed: false },

    { id: 81, text: "# ðŸ“… Month 9: Revision + Applications", completed: false },
    { id: 82, text: "Revisit 4â€“5 Weakest DSA Topics", completed: false },
    { id: 83, text: "Time-bound Problem Sets (Company Pattern)", completed: false },
    { id: 84, text: "Solve: Cracking the Coding Interview (Selected Problems)", completed: false },
    { id: 85, text: "1 Mock Interview every 3 days (Pramp, Peer)", completed: false },
    { id: 86, text: "Core CS Revision: OS, DBMS, CN, OOP Recap with Flashcards", completed: false },
    { id: 87, text: "Behavioral Prep: HR Questions, STAR Method", completed: false },
    { id: 88, text: "Resume Polishing, GitHub Cleanup", completed: false },
    { id: 89, text: "Apply via LinkedIn, Internshala, Company Careers Pages", completed: false }
];
